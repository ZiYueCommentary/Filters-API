plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.0-SNAPSHOT" apply false
    id "de.undercouch.download" version "4.1.2"
    id "maven-publish"
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()

        mixin {
            defaultRefmapName.set("filters-refmap.json")
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.officialMojangMappings()
    }
}

tasks.register('setupFiles') {
    download {
        src "https://weblate.ziyuesinicization.site/api/components/filters-api/en_us-json/file/"
        dest "lang.zip"
        overwrite true
        retries - 1
    }
    copy {
        outputs.upToDateWhen { false }
        from(zipTree("lang.zip"))
        into "temp_lang"
    }
    copy {
        outputs.upToDateWhen { false }
        from "temp_lang/filters-api/en_us-json/"
        into "/"
    }
    delete("lang.zip", "temp_lang")
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = "${rootProject.mod_version}+${rootProject.minecraft_version}"
    group = rootProject.maven_group

    repositories {
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        def targetVersion = 8
        if (JavaVersion.current().isJava9Compatible()) {
            options.release = targetVersion
        }
    }

    java {
        withSourcesJar()
    }

    afterEvaluate {
        for (def task in it.tasks) {
            if (task != rootProject.tasks.setupFiles) {
                task.dependsOn rootProject.tasks.setupFiles
            }
        }
    }
}
